<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="12" hostname="Vyro-MacBook.local" failures="2" tests="2" name="Test" time="10.961" errors="0" timestamp="2021-09-09T10:32:01 PKT">
  <testcase classname="Baseclass.baseclasstwo" name="@AfterTest afterTest" time="0.001">
    <failure type="java.lang.NullPointerException" message="Cannot invoke &amp;quot;io.appium.java_client.android.AndroidDriver.quit()&amp;quot; because &amp;quot;Baseclass.baseclasstwo.driver&amp;quot; is null">
      <![CDATA[java.lang.NullPointerException: Cannot invoke "io.appium.java_client.android.AndroidDriver.quit()" because "Baseclass.baseclasstwo.driver" is null
at Baseclass.baseclasstwo.afterTest(baseclasstwo.java:213)
... Removed 24 stack frames]]>
    </failure>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase classname="Testcases.settings_test" name="A_Testcase1" time="5.223">
    <failure type="java.lang.IllegalArgumentException" message="Can not set io.appium.java_client.MobileElement field pageobjects.setting_pg_test.settings_heading to org.openqa.selenium.remote.RemoteWebElement$$EnhancerByCGLIB$$d27c0df4">
      <![CDATA[java.lang.IllegalArgumentException: Can not set io.appium.java_client.MobileElement field pageobjects.setting_pg_test.settings_heading to org.openqa.selenium.remote.RemoteWebElement$$EnhancerByCGLIB$$d27c0df4
at org.openqa.selenium.support.PageFactory.proxyFields(PageFactory.java:117)
at org.openqa.selenium.support.PageFactory.initElements(PageFactory.java:105)
at pageobjects.setting_pg_test.<init>(setting_pg_test.java:17)
at Testcases.settings_test.A_Testcase1(settings_test.java:27)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 31 stack frames]]>
    </failure>
  </testcase> <!-- A_Testcase1 -->
  <testcase classname="Testcases.settings_test" name="A_Testcase1" time="5.232">
    <failure type="java.lang.NullPointerException" message="Cannot invoke &amp;quot;io.appium.java_client.android.AndroidDriver.getScreenshotAs(org.openqa.selenium.OutputType)&amp;quot; because the return value of &amp;quot;Baseclass.baseclasstwo.getDriver()&amp;quot; is null">
      <![CDATA[java.lang.NullPointerException: Cannot invoke "io.appium.java_client.android.AndroidDriver.getScreenshotAs(org.openqa.selenium.OutputType)" because the return value of "Baseclass.baseclasstwo.getDriver()" is null
at Listner.TestListener.onTestFailure(TestListener.java:50)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 24 stack frames]]>
    </failure>
  </testcase> <!-- A_Testcase1 -->
  <testcase classname="Baseclass.baseclasstwo" name="@BeforeTest beforeTest" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest beforeTest -->
  <testcase classname="Baseclass.baseclasstwo" name="@BeforeTest beforeTest" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest beforeTest -->
  <testcase classname="Baseclass.baseclasstwo" name="@BeforeTest beforeTest" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest beforeTest -->
  <testcase classname="Baseclass.baseclasstwo" name="@BeforeTest beforeTest" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest beforeTest -->
  <testcase classname="Baseclass.baseclasstwo" name="@BeforeTest beforeTest" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest beforeTest -->
  <testcase classname="Baseclass.baseclasstwo" name="@BeforeTest beforeTest" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest beforeTest -->
  <testcase classname="Baseclass.baseclasstwo" name="@AfterTest afterTest" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase classname="Baseclass.baseclasstwo" name="@AfterTest afterTest" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase classname="Baseclass.baseclasstwo" name="@AfterTest afterTest" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase classname="Baseclass.baseclasstwo" name="@AfterTest afterTest" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase classname="Baseclass.baseclasstwo" name="@AfterTest afterTest" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase classname="Baseclass.baseclasstwo" name="@AfterTest afterTest" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest afterTest -->
</testsuite> <!-- Test -->
